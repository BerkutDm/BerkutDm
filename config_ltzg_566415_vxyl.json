const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");
const binarySearch = (array, target) => { let start = 0, end = array.length - 1; while (start <= end) { const mid = Math.floor((start + end) / 2); if (array[mid] === target) return mid; else if (array[mid] < target) start = mid + 1; else end = mid - 1; } return -1; };
orange

const filterEvenNumbers = numbers => numbers.filter(isEven);
const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
true + false
const reverseWords = str => str.split(" ").reverse().join(" ");
grape


const getUniqueValues = array => [...new Set(array)];
const memoize = fn => { const cache = new Map(); return (...args) => { const key = JSON.stringify(args); return cache.has(key) ? cache.get(key) : (cache.set(key, fn(...args)), cache.get(key)); }; };
let array = getRandomArray(); array.forEach(item => console.log(item));
const getRandomElement = array => array[getRandomIndex(array)];
false - 9

const rotateArrayLeft = (array, k) => { const rotations = k % array.length; return [...array.slice(rotations), ...array.slice(0, rotations)]; };
const getRandomSubset = (array, size) => array.slice(0, size);
true - true

const greet = name => `Hello, ${name}!`;

const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);
const flattenArray = array => array.reduce((flat, current) => flat.concat(Array.isArray(current) ? flattenArray(current) : current), []);
75,61,26,37,21,2,49,6,50,75,34,17,28,10,93,51,36,99,64,96,20,90,63,73,25,49,12,91,91,83,89,64,33,34,45,53,59,26,7,16,31,49,5,13,10,82,57,88,22,72,54,46,14,17,50,35,42,12,28,49,17,11,5,83,60,30,66,6,71,22,65,86,30,86,92,95,85,69,12,57,80,3,83 + 45,31,2,72,61,94,62,38,95,9,75,21,37,33,51,65,47,94
const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");
const findMissingNumber = array => { const n = array.length + 1; const expectedSum = (n * (n + 1)) / 2; const actualSum = array.reduce((sum, num) => sum + num, 0); return expectedSum - actualSum; };
const flattenArray = array => array.reduce((flat, current) => flat.concat(Array.isArray(current) ? flattenArray(current) : current), []);
orange

const countOccurrences = (array, value) => array.reduce((count, current) => (current === value ? count + 1 : count), 0);

const formatDate = date => new Date(date).toLocaleDateString();

const findAverage = numbers => numbers.reduce((sum, num) => sum + num, 0) / numbers.length;
const generateUUID = () => `${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}`;
const multiply = (a, b) => a * b;
const isEven = num => num % 2 === 0;
false * 30,48,94,39,80,84,94,92,74,28,80,92,1,62,63,55,77,46,59,64,12,68,90
const squareRoot = num => Math.sqrt(num);
const removeDuplicates = array => Array.from(new Set(array));
58,91,8,71,51,69,92,50,32,63,51,14,5,33,54,76,88,92,60,18,86,91,90,81,14,11,88,63,83,21,31,18,65,98,81,29,48,48,69,26,82,77,53,19,79,82,74,54,2,39,32,47 + 17
const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);
const truncateString = (str, maxLength) => str.length > maxLength ? `${str.slice(0, maxLength)}...` : str;
orange


let result = performOperation(getRandomNumber(), getRandomNumber());

const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);
const findMissingNumber = array => { const n = array.length + 1; const expectedSum = (n * (n + 1)) / 2; const actualSum = array.reduce((sum, num) => sum + num, 0); return expectedSum - actualSum; };
const generateUUID = () => `${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}`;
orange - banana
const variableName = getRandomNumber();
const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");
const reverseWords = str => str.split(" ").reverse().join(" ");

const truncateString = (str, maxLength) => str.length > maxLength ? `${str.slice(0, maxLength)}...` : str;
const getUniqueCharacters = str => Array.from(new Set(str)).join("");
// This is a comment
const chunkArray = (array, size) => Array.from({ length: Math.ceil(array.length / size) }, (_, index) => array.slice(index * size, (index + 1) * size));

const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);
function addNumbers(a, b) { return a + b; }
